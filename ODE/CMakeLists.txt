cmake_minimum_required(VERSION 2.6)
set(LIB_NAME ODE)
set(LIB_TYPE STATIC)

project(${LIB_NAME})
set(CMAKE_DEBUG_POSTFIX  "_d" CACHE STRING "add a postfix, usually d on windows")
add_definitions( -DODE_LIB -DODE_DLL -DdDOUBLE)

set(LIBRARY_OUTPUT_PATH lib/${CMAKE_BUILD_TYPE})

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include ${CMAKE_CURRENT_SOURCE_DIR}/ode/src ${CMAKE_CURRENT_SOURCE_DIR}/OPCODE)

file(GLOB_RECURSE ODE_SOURCE_FILES_CPP ${CMAKE_CURRENT_SOURCE_DIR}/ode/*.cpp ${CMAKE_CURRENT_SOURCE_DIR}/ode/*.c)
file(GLOB ODE_SOURCE_FILES_H_1 ${CMAKE_CURRENT_SOURCE_DIR}/include/*.h)
file(GLOB ODE_SOURCE_FILES_H_2 ${CMAKE_CURRENT_SOURCE_DIR}/include/ODE/*.h)
file(GLOB_RECURSE OPCODE_SOURCE_FILES_CPP ${CMAKE_CURRENT_SOURCE_DIR}/OPCODE/*.cpp ${CMAKE_CURRENT_SOURCE_DIR}/OPCODE/*.c)
file(GLOB OPCODE_SOURCE_FILES_H ${CMAKE_CURRENT_SOURCE_DIR}/OPCODE/*.h)

set(ODE_SOURCE_FILES ${ODE_SOURCE_FILES_CPP} ${ODE_SOURCE_FILES_H_1} ${ODE_SOURCE_FILES_H_2} ${OPCODE_SOURCE_FILES_CPP} ${OPCODE_SOURCE_FILES_H})

add_library(
	${LIB_NAME}
	${LIB_TYPE}
	${ODE_SOURCE_FILES}
)

#SET_TARGET_PROPERTIES (tinyxml PROPERTIES DEFINE_SYMBOL  "EXPORT" )
INSTALL( FILES ${ODE_SOURCE_FILES_H_1} DESTINATION include/ )
INSTALL( FILES ${ODE_SOURCE_FILES_H_2} DESTINATION include/ode )
INSTALL( FILES ${OPCODE_SOURCE_FILES_H} DESTINATION OPCODE/ )

INSTALL(TARGETS ${LIB_NAME}
  RUNTIME DESTINATION bin/debug CONFIGURATIONS Debug
  LIBRARY DESTINATION bin/debug CONFIGURATIONS Debug
  ARCHIVE DESTINATION lib/debug CONFIGURATIONS Debug
  )

INSTALL(TARGETS ${LIB_NAME}
  RUNTIME DESTINATION bin/release CONFIGURATIONS Release
  LIBRARY DESTINATION bin/release CONFIGURATIONS Release
  ARCHIVE DESTINATION lib/release CONFIGURATIONS Release
  )
  
IF(MSVC)
  INSTALL(DIRECTORY ${PROJECT_BINARY_DIR}/lib/Debug
    DESTINATION lib
    FILES_MATCHING
    PATTERN *.pdb
)
ENDIF(MSVC)
